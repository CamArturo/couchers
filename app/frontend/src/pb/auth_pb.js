// source: pb/auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require("google-protobuf");

var goog = jspb;
var global = Function("return this")();

var google_protobuf_empty_pb = require("google-protobuf/google/protobuf/empty_pb.js");

goog.object.extend(proto, google_protobuf_empty_pb);
var pb_annotations_pb = require("../pb/annotations_pb.js");

goog.object.extend(proto, pb_annotations_pb);
var pb_api_pb = require("../pb/api_pb.js");

goog.object.extend(proto, pb_api_pb);
goog.exportSymbol("proto.org.couchers.auth.AuthReq", null, global);
goog.exportSymbol("proto.org.couchers.auth.AuthRes", null, global);
goog.exportSymbol(
  "proto.org.couchers.auth.CompleteChangeEmailReq",
  null,
  global
);
goog.exportSymbol(
  "proto.org.couchers.auth.CompletePasswordResetReq",
  null,
  global
);
goog.exportSymbol("proto.org.couchers.auth.CompleteSignupReq", null, global);
goog.exportSymbol(
  "proto.org.couchers.auth.CompleteTokenLoginReq",
  null,
  global
);
goog.exportSymbol("proto.org.couchers.auth.LoginReq", null, global);
goog.exportSymbol("proto.org.couchers.auth.LoginRes", null, global);
goog.exportSymbol("proto.org.couchers.auth.LoginRes.LoginStep", null, global);
goog.exportSymbol("proto.org.couchers.auth.ResetPasswordReq", null, global);
goog.exportSymbol("proto.org.couchers.auth.SignupReq", null, global);
goog.exportSymbol("proto.org.couchers.auth.SignupRes", null, global);
goog.exportSymbol("proto.org.couchers.auth.SignupRes.SignupStep", null, global);
goog.exportSymbol("proto.org.couchers.auth.SignupTokenInfoReq", null, global);
goog.exportSymbol("proto.org.couchers.auth.SignupTokenInfoRes", null, global);
goog.exportSymbol("proto.org.couchers.auth.UsernameValidReq", null, global);
goog.exportSymbol("proto.org.couchers.auth.UsernameValidRes", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.SignupReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.SignupReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.SignupReq.displayName =
    "proto.org.couchers.auth.SignupReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.SignupRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.SignupRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.SignupRes.displayName =
    "proto.org.couchers.auth.SignupRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.UsernameValidReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.UsernameValidReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.UsernameValidReq.displayName =
    "proto.org.couchers.auth.UsernameValidReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.UsernameValidRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.UsernameValidRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.UsernameValidRes.displayName =
    "proto.org.couchers.auth.UsernameValidRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.SignupTokenInfoReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.SignupTokenInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.SignupTokenInfoReq.displayName =
    "proto.org.couchers.auth.SignupTokenInfoReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.SignupTokenInfoRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.SignupTokenInfoRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.SignupTokenInfoRes.displayName =
    "proto.org.couchers.auth.SignupTokenInfoRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.CompleteSignupReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.CompleteSignupReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.CompleteSignupReq.displayName =
    "proto.org.couchers.auth.CompleteSignupReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.LoginReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.LoginReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.LoginReq.displayName =
    "proto.org.couchers.auth.LoginReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.LoginRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.LoginRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.LoginRes.displayName =
    "proto.org.couchers.auth.LoginRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.CompleteTokenLoginReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.CompleteTokenLoginReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.CompleteTokenLoginReq.displayName =
    "proto.org.couchers.auth.CompleteTokenLoginReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.AuthReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.AuthReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.AuthReq.displayName =
    "proto.org.couchers.auth.AuthReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.AuthRes = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.AuthRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.AuthRes.displayName =
    "proto.org.couchers.auth.AuthRes";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.ResetPasswordReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.ResetPasswordReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.ResetPasswordReq.displayName =
    "proto.org.couchers.auth.ResetPasswordReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.CompletePasswordResetReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.CompletePasswordResetReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.CompletePasswordResetReq.displayName =
    "proto.org.couchers.auth.CompletePasswordResetReq";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.org.couchers.auth.CompleteChangeEmailReq = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.org.couchers.auth.CompleteChangeEmailReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.org.couchers.auth.CompleteChangeEmailReq.displayName =
    "proto.org.couchers.auth.CompleteChangeEmailReq";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.SignupReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.SignupReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.SignupReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.SignupReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        email: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.SignupReq}
 */
proto.org.couchers.auth.SignupReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.SignupReq();
  return proto.org.couchers.auth.SignupReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.SignupReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.SignupReq}
 */
proto.org.couchers.auth.SignupReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setEmail(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.SignupReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.org.couchers.auth.SignupReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.SignupReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.SignupReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.org.couchers.auth.SignupReq.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.SignupReq} returns this
 */
proto.org.couchers.auth.SignupReq.prototype.setEmail = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.SignupRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.SignupRes.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.SignupRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.SignupRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        nextStep: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.SignupRes}
 */
proto.org.couchers.auth.SignupRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.SignupRes();
  return proto.org.couchers.auth.SignupRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.SignupRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.SignupRes}
 */
proto.org.couchers.auth.SignupRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value =
          /** @type {!proto.org.couchers.auth.SignupRes.SignupStep} */ (
            reader.readEnum()
          );
        msg.setNextStep(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.SignupRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.org.couchers.auth.SignupRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.SignupRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.SignupRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getNextStep();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
};

/**
 * @enum {number}
 */
proto.org.couchers.auth.SignupRes.SignupStep = {
  SENT_SIGNUP_EMAIL: 0,
  EMAIL_EXISTS: 1,
  INVALID_EMAIL: 2,
};

/**
 * optional SignupStep next_step = 1;
 * @return {!proto.org.couchers.auth.SignupRes.SignupStep}
 */
proto.org.couchers.auth.SignupRes.prototype.getNextStep = function () {
  return /** @type {!proto.org.couchers.auth.SignupRes.SignupStep} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.org.couchers.auth.SignupRes.SignupStep} value
 * @return {!proto.org.couchers.auth.SignupRes} returns this
 */
proto.org.couchers.auth.SignupRes.prototype.setNextStep = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.UsernameValidReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.UsernameValidReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.UsernameValidReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.UsernameValidReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        username: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.UsernameValidReq}
 */
proto.org.couchers.auth.UsernameValidReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.UsernameValidReq();
  return proto.org.couchers.auth.UsernameValidReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.UsernameValidReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.UsernameValidReq}
 */
proto.org.couchers.auth.UsernameValidReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setUsername(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.UsernameValidReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.UsernameValidReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.UsernameValidReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.UsernameValidReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string username = 1;
 * @return {string}
 */
proto.org.couchers.auth.UsernameValidReq.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.UsernameValidReq} returns this
 */
proto.org.couchers.auth.UsernameValidReq.prototype.setUsername = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.UsernameValidRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.UsernameValidRes.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.UsernameValidRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.UsernameValidRes.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        valid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.UsernameValidRes}
 */
proto.org.couchers.auth.UsernameValidRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.UsernameValidRes();
  return proto.org.couchers.auth.UsernameValidRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.UsernameValidRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.UsernameValidRes}
 */
proto.org.couchers.auth.UsernameValidRes.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setValid(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.UsernameValidRes.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.UsernameValidRes.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.UsernameValidRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.UsernameValidRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(1, f);
  }
};

/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.org.couchers.auth.UsernameValidRes.prototype.getValid = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.org.couchers.auth.UsernameValidRes} returns this
 */
proto.org.couchers.auth.UsernameValidRes.prototype.setValid = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.SignupTokenInfoReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.SignupTokenInfoReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.SignupTokenInfoReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.SignupTokenInfoReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        signupToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.SignupTokenInfoReq}
 */
proto.org.couchers.auth.SignupTokenInfoReq.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.SignupTokenInfoReq();
  return proto.org.couchers.auth.SignupTokenInfoReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.SignupTokenInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.SignupTokenInfoReq}
 */
proto.org.couchers.auth.SignupTokenInfoReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setSignupToken(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.SignupTokenInfoReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.SignupTokenInfoReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.SignupTokenInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.SignupTokenInfoReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getSignupToken();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string signup_token = 1;
 * @return {string}
 */
proto.org.couchers.auth.SignupTokenInfoReq.prototype.getSignupToken =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.SignupTokenInfoReq} returns this
 */
proto.org.couchers.auth.SignupTokenInfoReq.prototype.setSignupToken = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.SignupTokenInfoRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.SignupTokenInfoRes.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.SignupTokenInfoRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.SignupTokenInfoRes.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        email: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.SignupTokenInfoRes}
 */
proto.org.couchers.auth.SignupTokenInfoRes.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.SignupTokenInfoRes();
  return proto.org.couchers.auth.SignupTokenInfoRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.SignupTokenInfoRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.SignupTokenInfoRes}
 */
proto.org.couchers.auth.SignupTokenInfoRes.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setEmail(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.SignupTokenInfoRes.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.SignupTokenInfoRes.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.SignupTokenInfoRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.SignupTokenInfoRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string email = 1;
 * @return {string}
 */
proto.org.couchers.auth.SignupTokenInfoRes.prototype.getEmail = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.SignupTokenInfoRes} returns this
 */
proto.org.couchers.auth.SignupTokenInfoRes.prototype.setEmail = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.CompleteSignupReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.CompleteSignupReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.CompleteSignupReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.CompleteSignupReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        signupToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
        username: jspb.Message.getFieldWithDefault(msg, 2, ""),
        name: jspb.Message.getFieldWithDefault(msg, 3, ""),
        birthdate: jspb.Message.getFieldWithDefault(msg, 5, ""),
        gender: jspb.Message.getFieldWithDefault(msg, 6, ""),
        hostingStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
        city: jspb.Message.getFieldWithDefault(msg, 8, ""),
        lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
        lng: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
        radius: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
        acceptTos: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.CompleteSignupReq}
 */
proto.org.couchers.auth.CompleteSignupReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.CompleteSignupReq();
  return proto.org.couchers.auth.CompleteSignupReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.CompleteSignupReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.CompleteSignupReq}
 */
proto.org.couchers.auth.CompleteSignupReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setSignupToken(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setUsername(value);
          break;
        case 3:
          var value = /** @type {string} */ (reader.readString());
          msg.setName(value);
          break;
        case 5:
          var value = /** @type {string} */ (reader.readString());
          msg.setBirthdate(value);
          break;
        case 6:
          var value = /** @type {string} */ (reader.readString());
          msg.setGender(value);
          break;
        case 7:
          var value =
            /** @type {!proto.org.couchers.api.core.HostingStatus} */ (
              reader.readEnum()
            );
          msg.setHostingStatus(value);
          break;
        case 8:
          var value = /** @type {string} */ (reader.readString());
          msg.setCity(value);
          break;
        case 9:
          var value = /** @type {number} */ (reader.readDouble());
          msg.setLat(value);
          break;
        case 10:
          var value = /** @type {number} */ (reader.readDouble());
          msg.setLng(value);
          break;
        case 11:
          var value = /** @type {number} */ (reader.readDouble());
          msg.setRadius(value);
          break;
        case 12:
          var value = /** @type {boolean} */ (reader.readBool());
          msg.setAcceptTos(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.CompleteSignupReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.CompleteSignupReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.CompleteSignupReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getSignupToken();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getBirthdate();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getGender();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
  f = message.getHostingStatus();
  if (f !== 0.0) {
    writer.writeEnum(7, f);
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(9, f);
  }
  f = message.getLng();
  if (f !== 0.0) {
    writer.writeDouble(10, f);
  }
  f = message.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(11, f);
  }
  f = message.getAcceptTos();
  if (f) {
    writer.writeBool(12, f);
  }
};

/**
 * optional string signup_token = 1;
 * @return {string}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getSignupToken =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setSignupToken = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string username = 2;
 * @return {string}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setUsername = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string name = 3;
 * @return {string}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string birthdate = 5;
 * @return {string}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getBirthdate = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setBirthdate = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string gender = 6;
 * @return {string}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getGender = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setGender = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * optional org.couchers.api.core.HostingStatus hosting_status = 7;
 * @return {!proto.org.couchers.api.core.HostingStatus}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getHostingStatus =
  function () {
    return /** @type {!proto.org.couchers.api.core.HostingStatus} */ (
      jspb.Message.getFieldWithDefault(this, 7, 0)
    );
  };

/**
 * @param {!proto.org.couchers.api.core.HostingStatus} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setHostingStatus =
  function (value) {
    return jspb.Message.setProto3EnumField(this, 7, value);
  };

/**
 * optional string city = 8;
 * @return {string}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getCity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setCity = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional double lat = 9;
 * @return {number}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getLat = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setLat = function (value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};

/**
 * optional double lng = 10;
 * @return {number}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getLng = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setLng = function (value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};

/**
 * optional double radius = 11;
 * @return {number}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getRadius = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0)
  );
};

/**
 * @param {number} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setRadius = function (
  value
) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};

/**
 * optional bool accept_tos = 12;
 * @return {boolean}
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.getAcceptTos = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 12, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.org.couchers.auth.CompleteSignupReq} returns this
 */
proto.org.couchers.auth.CompleteSignupReq.prototype.setAcceptTos = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.LoginReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.LoginReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.LoginReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.LoginReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        user: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.LoginReq}
 */
proto.org.couchers.auth.LoginReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.LoginReq();
  return proto.org.couchers.auth.LoginReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.LoginReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.LoginReq}
 */
proto.org.couchers.auth.LoginReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.LoginReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.org.couchers.auth.LoginReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.LoginReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.LoginReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.auth.LoginReq.prototype.getUser = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.LoginReq} returns this
 */
proto.org.couchers.auth.LoginReq.prototype.setUser = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.LoginRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.LoginRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.LoginRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.LoginRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        nextStep: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.LoginRes}
 */
proto.org.couchers.auth.LoginRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.LoginRes();
  return proto.org.couchers.auth.LoginRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.LoginRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.LoginRes}
 */
proto.org.couchers.auth.LoginRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.org.couchers.auth.LoginRes.LoginStep} */ (
          reader.readEnum()
        );
        msg.setNextStep(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.LoginRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.org.couchers.auth.LoginRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.LoginRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.LoginRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getNextStep();
  if (f !== 0.0) {
    writer.writeEnum(1, f);
  }
};

/**
 * @enum {number}
 */
proto.org.couchers.auth.LoginRes.LoginStep = {
  NEED_PASSWORD: 0,
  SENT_LOGIN_EMAIL: 1,
  INVALID_USER: 2,
};

/**
 * optional LoginStep next_step = 1;
 * @return {!proto.org.couchers.auth.LoginRes.LoginStep}
 */
proto.org.couchers.auth.LoginRes.prototype.getNextStep = function () {
  return /** @type {!proto.org.couchers.auth.LoginRes.LoginStep} */ (
    jspb.Message.getFieldWithDefault(this, 1, 0)
  );
};

/**
 * @param {!proto.org.couchers.auth.LoginRes.LoginStep} value
 * @return {!proto.org.couchers.auth.LoginRes} returns this
 */
proto.org.couchers.auth.LoginRes.prototype.setNextStep = function (value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.CompleteTokenLoginReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.CompleteTokenLoginReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.CompleteTokenLoginReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.CompleteTokenLoginReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        loginToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.CompleteTokenLoginReq}
 */
proto.org.couchers.auth.CompleteTokenLoginReq.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.CompleteTokenLoginReq();
  return proto.org.couchers.auth.CompleteTokenLoginReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.CompleteTokenLoginReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.CompleteTokenLoginReq}
 */
proto.org.couchers.auth.CompleteTokenLoginReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setLoginToken(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.CompleteTokenLoginReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.CompleteTokenLoginReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.CompleteTokenLoginReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.CompleteTokenLoginReq.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getLoginToken();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
  };

/**
 * optional string login_token = 1;
 * @return {string}
 */
proto.org.couchers.auth.CompleteTokenLoginReq.prototype.getLoginToken =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteTokenLoginReq} returns this
 */
proto.org.couchers.auth.CompleteTokenLoginReq.prototype.setLoginToken =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.AuthReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.AuthReq.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.AuthReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.AuthReq.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        user: jspb.Message.getFieldWithDefault(msg, 1, ""),
        password: jspb.Message.getFieldWithDefault(msg, 2, ""),
        rememberDevice: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.AuthReq}
 */
proto.org.couchers.auth.AuthReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.AuthReq();
  return proto.org.couchers.auth.AuthReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.AuthReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.AuthReq}
 */
proto.org.couchers.auth.AuthReq.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUser(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPassword(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setRememberDevice(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.AuthReq.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.org.couchers.auth.AuthReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.AuthReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.AuthReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getRememberDevice();
  if (f) {
    writer.writeBool(3, f);
  }
};

/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.auth.AuthReq.prototype.getUser = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.AuthReq} returns this
 */
proto.org.couchers.auth.AuthReq.prototype.setUser = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string password = 2;
 * @return {string}
 */
proto.org.couchers.auth.AuthReq.prototype.getPassword = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.AuthReq} returns this
 */
proto.org.couchers.auth.AuthReq.prototype.setPassword = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional bool remember_device = 3;
 * @return {boolean}
 */
proto.org.couchers.auth.AuthReq.prototype.getRememberDevice = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.org.couchers.auth.AuthReq} returns this
 */
proto.org.couchers.auth.AuthReq.prototype.setRememberDevice = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.AuthRes.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.AuthRes.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.AuthRes} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.AuthRes.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        jailed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.AuthRes}
 */
proto.org.couchers.auth.AuthRes.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.AuthRes();
  return proto.org.couchers.auth.AuthRes.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.AuthRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.AuthRes}
 */
proto.org.couchers.auth.AuthRes.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setJailed(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.AuthRes.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.org.couchers.auth.AuthRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.AuthRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.AuthRes.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
  f = message.getJailed();
  if (f) {
    writer.writeBool(2, f);
  }
};

/**
 * optional int64 user_id = 1;
 * @return {number}
 */
proto.org.couchers.auth.AuthRes.prototype.getUserId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.org.couchers.auth.AuthRes} returns this
 */
proto.org.couchers.auth.AuthRes.prototype.setUserId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional bool jailed = 2;
 * @return {boolean}
 */
proto.org.couchers.auth.AuthRes.prototype.getJailed = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 2, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.org.couchers.auth.AuthRes} returns this
 */
proto.org.couchers.auth.AuthRes.prototype.setJailed = function (value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.ResetPasswordReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.ResetPasswordReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.ResetPasswordReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.ResetPasswordReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        user: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.ResetPasswordReq}
 */
proto.org.couchers.auth.ResetPasswordReq.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.ResetPasswordReq();
  return proto.org.couchers.auth.ResetPasswordReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.ResetPasswordReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.ResetPasswordReq}
 */
proto.org.couchers.auth.ResetPasswordReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setUser(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.ResetPasswordReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.ResetPasswordReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.ResetPasswordReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.ResetPasswordReq.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string user = 1;
 * @return {string}
 */
proto.org.couchers.auth.ResetPasswordReq.prototype.getUser = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.ResetPasswordReq} returns this
 */
proto.org.couchers.auth.ResetPasswordReq.prototype.setUser = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.CompletePasswordResetReq.prototype.toObject =
    function (opt_includeInstance) {
      return proto.org.couchers.auth.CompletePasswordResetReq.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.CompletePasswordResetReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.CompletePasswordResetReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        passwordResetToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.CompletePasswordResetReq}
 */
proto.org.couchers.auth.CompletePasswordResetReq.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.CompletePasswordResetReq();
  return proto.org.couchers.auth.CompletePasswordResetReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.CompletePasswordResetReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.CompletePasswordResetReq}
 */
proto.org.couchers.auth.CompletePasswordResetReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setPasswordResetToken(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.CompletePasswordResetReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.CompletePasswordResetReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.CompletePasswordResetReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.CompletePasswordResetReq.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getPasswordResetToken();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
  };

/**
 * optional string password_reset_token = 1;
 * @return {string}
 */
proto.org.couchers.auth.CompletePasswordResetReq.prototype.getPasswordResetToken =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompletePasswordResetReq} returns this
 */
proto.org.couchers.auth.CompletePasswordResetReq.prototype.setPasswordResetToken =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.org.couchers.auth.CompleteChangeEmailReq.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.org.couchers.auth.CompleteChangeEmailReq.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.org.couchers.auth.CompleteChangeEmailReq} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.org.couchers.auth.CompleteChangeEmailReq.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        changeEmailToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.org.couchers.auth.CompleteChangeEmailReq}
 */
proto.org.couchers.auth.CompleteChangeEmailReq.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.org.couchers.auth.CompleteChangeEmailReq();
  return proto.org.couchers.auth.CompleteChangeEmailReq.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.org.couchers.auth.CompleteChangeEmailReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.org.couchers.auth.CompleteChangeEmailReq}
 */
proto.org.couchers.auth.CompleteChangeEmailReq.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setChangeEmailToken(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.org.couchers.auth.CompleteChangeEmailReq.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.org.couchers.auth.CompleteChangeEmailReq.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.org.couchers.auth.CompleteChangeEmailReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.org.couchers.auth.CompleteChangeEmailReq.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getChangeEmailToken();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
  };

/**
 * optional string change_email_token = 1;
 * @return {string}
 */
proto.org.couchers.auth.CompleteChangeEmailReq.prototype.getChangeEmailToken =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.org.couchers.auth.CompleteChangeEmailReq} returns this
 */
proto.org.couchers.auth.CompleteChangeEmailReq.prototype.setChangeEmailToken =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

goog.object.extend(exports, proto.org.couchers.auth);
