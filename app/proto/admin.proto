syntax = "proto3";

package org.couchers.api.admin;

import "google/protobuf/empty.proto";

import "annotations.proto";
import "communities.proto";

service Admin {
  option (auth_level) = AUTH_LEVEL_ADMIN;

  rpc GetUserEmailByUsername(GetUserEmailByUsernameReq) returns (GetUserEmailRes) {
    // Gets user email based user_name
  }

  rpc GetUserEmailById(GetUserEmailByIdReq) returns (GetUserEmailRes) {
    // Gets user email based user_id
  }

  rpc CreateCommunity(CreateCommunityReq) returns (org.couchers.api.communities.Community) {
    // Creates a new community
  }

  rpc BanUser(BanUserReq) returns (google.protobuf.Empty) {}

  rpc DeleteUser(DeleteUserReq) returns (google.protobuf.Empty) {}
}

message GetUserEmailByUsernameReq {
  string username = 1;
}

message GetUserEmailByIdReq {
  int64 user_id = 1;
}

message GetUserEmailRes {
  string email = 1;
  int64 user_id = 2;
}

message CreateCommunityReq {
  string name = 1;
  string slug = 2;
  string description = 3;
  int64 parent_node_id = 4;
  repeated int64 admin_ids = 5;
  string geojson = 6;
}

message BanUserReq {
  int64 user_id = 1;
}

message DeleteUserReq {
  int64 user_id = 1;
}
