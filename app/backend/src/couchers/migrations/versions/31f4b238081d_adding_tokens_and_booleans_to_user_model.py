"""adding tokens and booleans to user model

Revision ID: 31f4b238081d
Revises: d3cee8207c3d
Create Date: 2021-06-06 21:47:36.092302

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "31f4b238081d"
down_revision = "d3cee8207c3d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("need_to_confirm_via_new_email", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("need_to_confirm_via_old_email", sa.Boolean(), nullable=True))
    op.add_column("users", sa.Column("old_email_token", sa.String(), nullable=True))
    op.add_column("users", sa.Column("old_email_token_created", sa.DateTime(timezone=True), nullable=True))
    op.add_column("users", sa.Column("old_email_token_expiry", sa.DateTime(timezone=True), nullable=True))
    # ### end Alembic commands ###

    # Manually generated
    op.create_check_constraint(
        constraint_name="check_old_email_token_state",
        table_name="users",
        condition="(need_to_confirm_via_old_email IS NULL AND old_email_token IS NULL AND old_email_token_created IS NULL AND old_email_token_expiry IS NULL) OR \
         (need_to_confirm_via_old_email IS TRUE AND old_email_token IS NOT NULL AND old_email_token_created IS NOT NULL AND old_email_token_expiry IS NOT NULL) OR \
         (need_to_confirm_via_old_email IS FALSE AND old_email_token IS NULL AND old_email_token_created IS NULL AND old_email_token_expiry IS NULL)",
    )
    op.create_check_constraint(
        constraint_name="check_new_email_token_state",
        table_name="users",
        condition="(need_to_confirm_via_new_email IS NULL AND new_email_token IS NULL AND new_email_token_created IS NULL AND new_email_token_expiry IS NULL) OR \
         (need_to_confirm_via_new_email IS TRUE AND new_email_token IS NOT NULL AND new_email_token_created IS NOT NULL AND new_email_token_expiry IS NOT NULL) OR \
         (need_to_confirm_via_new_email IS FALSE AND new_email_token IS NULL AND new_email_token_created IS NULL AND new_email_token_expiry IS NULL)",
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "old_email_token_expiry")
    op.drop_column("users", "old_email_token_created")
    op.drop_column("users", "old_email_token")
    op.drop_column("users", "need_to_confirm_via_old_email")
    op.drop_column("users", "need_to_confirm_via_new_email")
    # ### end Alembic commands ###

    # Manually generated:
    op.drop_constraint("check_old_email_token_state")
    op.drop_constraint("check_new_email_token_state")
