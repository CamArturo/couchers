"""Update threads and discussions

Revision ID: 71b0339a96bd
Revises: 20b0d7fd2619
Create Date: 2021-02-06 16:55:22.719753

"""
import geoalchemy2
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "71b0339a96bd"
down_revision = "20b0d7fd2619"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("clusters", sa.Column("thread_id", sa.BigInteger(), nullable=False))
    op.create_unique_constraint(op.f("uq_clusters_thread_id"), "clusters", ["thread_id"])
    op.create_foreign_key(op.f("fk_clusters_thread_id_threads"), "clusters", "threads", ["thread_id"], ["id"])
    op.create_unique_constraint(op.f("uq_discussions_thread_id"), "discussions", ["thread_id"])
    op.drop_index("ix_discussions_thread_id", table_name="discussions")
    op.create_unique_constraint(op.f("uq_events_thread_id"), "events", ["thread_id"])
    op.drop_index("ix_events_thread_id", table_name="events")
    op.alter_column("pages", "thread_id", existing_type=sa.BIGINT(), nullable=False)
    op.create_unique_constraint(op.f("uq_pages_thread_id"), "pages", ["thread_id"])
    op.drop_index("ix_pages_thread_id", table_name="pages")
    op.drop_column("threads", "title")
    op.add_column("discussions", sa.Column("content", sa.String(), nullable=False))
    op.add_column("discussions", sa.Column("creator_user_id", sa.BigInteger(), nullable=False))
    op.add_column("discussions", sa.Column("owner_cluster_id", sa.BigInteger(), nullable=False))
    op.create_index(op.f("ix_discussions_creator_user_id"), "discussions", ["creator_user_id"], unique=False)
    op.create_index(op.f("ix_discussions_owner_cluster_id"), "discussions", ["owner_cluster_id"], unique=False)
    op.create_foreign_key(
        op.f("fk_discussions_creator_user_id_users"), "discussions", "users", ["creator_user_id"], ["id"]
    )
    op.create_foreign_key(
        op.f("fk_discussions_owner_cluster_id_clusters"), "discussions", "clusters", ["owner_cluster_id"], ["id"]
    )
    op.drop_column("discussions", "is_private")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("discussions", sa.Column("is_private", sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("fk_discussions_owner_cluster_id_clusters"), "discussions", type_="foreignkey")
    op.drop_constraint(op.f("fk_discussions_creator_user_id_users"), "discussions", type_="foreignkey")
    op.drop_index(op.f("ix_discussions_owner_cluster_id"), table_name="discussions")
    op.drop_index(op.f("ix_discussions_creator_user_id"), table_name="discussions")
    op.drop_column("discussions", "owner_cluster_id")
    op.drop_column("discussions", "creator_user_id")
    op.drop_column("discussions", "content")
    op.add_column("threads", sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_index("ix_pages_thread_id", "pages", ["thread_id"], unique=True)
    op.drop_constraint(op.f("uq_pages_thread_id"), "pages", type_="unique")
    op.alter_column("pages", "thread_id", existing_type=sa.BIGINT(), nullable=True)
    op.create_index("ix_events_thread_id", "events", ["thread_id"], unique=True)
    op.drop_constraint(op.f("uq_events_thread_id"), "events", type_="unique")
    op.create_index("ix_discussions_thread_id", "discussions", ["thread_id"], unique=True)
    op.drop_constraint(op.f("uq_discussions_thread_id"), "discussions", type_="unique")
    op.drop_constraint(op.f("fk_clusters_thread_id_threads"), "clusters", type_="foreignkey")
    op.drop_constraint(op.f("uq_clusters_thread_id"), "clusters", type_="unique")
    op.drop_column("clusters", "thread_id")
    # ### end Alembic commands ###
